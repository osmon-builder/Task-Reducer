{"version":3,"sources":["Reducer/todoReducer.js","components/TodoAdd.js","hooks/useForm.js","components/TodoListItem.js","components/TodoList.js","App.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todos","id","map","todo","done","TodoAdd","handleAddTodo","initialState","useState","values","setvalues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","desc","className","placeholder","autoComplete","onChange","TodoListItem","index","handleDelete","handleToggle","onClick","TodoList","i","init","JSON","parse","localStorage","getItem","App","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d88c5ce3.chunk.js","sourcesContent":["export const todoReducer = (state = [],action) => {\r\n\r\n    switch (action.type) {\r\n        case 'add':\r\n            \r\n           return [...state, action.payload]\r\n    \r\n        case 'delete':\r\n            return state.filter( todos => todos.id !== action.payload);   \r\n        \r\n        case 'toggle':\r\n            return state.map(todo =>\r\n                (todo.id === action.payload)\r\n                    ?{...todo,done: !todo.done}\r\n                    : todo\r\n                )\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { useForm } from '../hooks/useForm';\r\n\r\n\r\nexport const TodoAdd = ({handleAddTodo}) => {\r\n\r\n    const [{description}, handleInputChange, reset] = useForm ({\r\n        description: ''\r\n    });\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if( description.trim().length <= 1) {\r\n            return;\r\n        }\r\n        \r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false\r\n        };\r\n\r\n        handleAddTodo (newTodo);\r\n        reset();\r\n        }\r\n\r\n    return (\r\n        <>\r\n            <h4>Agregar TODO</h4>\r\n            <hr/>\r\n            <form onSubmit= { handleSubmit }>\r\n                <input\r\n                type=\"text\"\r\n                name=\"description\"\r\n                className=\"form-control\"\r\n                placeholder=\"Aprender...\"\r\n                autoComplete=\"off\" \r\n                value= {description}\r\n                onChange= {handleInputChange}                                                 \r\n                />\r\n\r\n            <button \r\n                type=\"submit\"\r\n                className=\"btn btn-outline-primary mt-1 w-100\"\r\n            >\r\n                Agregar\r\n            </button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    \r\n    const [values, setvalues] = useState(initialState)\r\n\r\n    const reset = () => {\r\n        setvalues(initialState)\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setvalues ({\r\n            ...values,\r\n            [ target.name ]: target.value,\r\n\r\n        });\r\n    }\r\n\r\n    return [ values, handleInputChange, reset];\r\n\r\n}","import React from 'react'\r\n\r\nexport const TodoListItem = ({todos, index, handleDelete, handleToggle}) => {\r\n\r\n\r\n    return (\r\n        <li\r\n            key = { todos.id}\r\n            className=\"list-group-item\"\r\n            >\r\n            <p \r\n            className={ `${ todos.done && 'complete'}` }\r\n            onClick= {() => handleToggle( todos.id )}\r\n            > \r\n            { index + 1 }. \r\n            {todos.desc}</p>\r\n\r\n            <button \r\n            className=\"btn btn-danger\"\r\n            onClick= {() => handleDelete(todos.id)}\r\n            >\r\n                Borrar\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TodoListItem } from './TodoListItem'\r\n\r\n\r\nexport const TodoList = ({todos, handleDelete, handleToggle}) => {\r\n\r\n\r\n    return (\r\n        <ul className=\" list-group list-group-flush\">\r\n        {\r\n            todos.map ( (todos, i) => (\r\n\r\n                <TodoListItem\r\n                    key = {todos.id}\r\n                    todos = {todos}\r\n                    index = {i}\r\n                    handleDelete = {handleDelete}\r\n                    handleToggle = {handleToggle}\r\n                />\r\n            ))\r\n        }\r\n        </ul>\r\n    )\r\n}\r\n","import React, { useEffect, useReducer } from 'react'\nimport { todoReducer } from './Reducer/todoReducer';\nimport './App.css';\n\nimport { TodoAdd } from './components/TodoAdd';\nimport { TodoList } from './components/TodoList';\n\n\n\n\n\n\nconst init = ()=>{\n    return  JSON.parse(localStorage.getItem('todos')) || []\n}\n\nexport const App = () => {\n\n    const [todos, dispatch] = useReducer(todoReducer, [], init );\n\n    useEffect(() => {\n       localStorage.setItem('todos', JSON.stringify( todos ))\n    }, [todos]);\n\n    const handleDelete = (todoId) =>{\n        \n        const action = {\n            type: \"delete\",\n            payload: todoId\n        }\n   \n        dispatch(action);\n    }\n   \n    const handleToggle = (todoId) => {\n\n        dispatch({\n            type: 'toggle',\n            payload: todoId\n        })\n    }\n\n    const handleAddTodo = ( newTodo) => {\n\n       dispatch ({\n            type: \"add\",\n            payload: newTodo\n        })\n        \n    }\n\n    return (\n        <div> \n            <h1 className=\"title\">TodoApp ({todos.length})</h1>\n            <hr/>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-7\">\n                        <TodoList\n                            todos= {todos}\n                            handleDelete= {handleDelete}\n                            handleToggle= {handleToggle}\n                        />\n                    </div>\n                        <div className=\"col-5\">\n                        <TodoAdd\n                            handleAddTodo={handleAddTodo}\n                        />                   \n                        </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {App} from './App';\n\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}